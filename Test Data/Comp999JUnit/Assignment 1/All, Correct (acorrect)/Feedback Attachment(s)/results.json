{"userId":"All, Correct (acorrect)","featureResults":[{"score":16.0,"results":[{"notes":"","percentage":1.0,"name":"gradingTools.comp999junit.assignment1.testcases.APointAngleZeroDegreeTest","autoGraded":true},{"notes":"","percentage":1.0,"name":"gradingTools.comp999junit.assignment1.testcases.APointAngleNinetyDegreeTest","autoGraded":true},{"notes":"","percentage":1.0,"name":"gradingTools.comp999junit.assignment1.testcases.APointAngleFortyFiveDegreeTest","autoGraded":true},{"notes":"","percentage":1.0,"name":"gradingTools.comp999junit.assignment1.testcases.APointAngleMinusNinetyDegreeTest","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Angle Tests","points":16.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Angle Tests                                            %.1f / 16.0"},"autoNotes":"","message":"gradingTools.comp999junit.assignment1.testcases.APointAngleZeroDegreeTest: 100.0% \ngradingTools.comp999junit.assignment1.testcases.APointAngleNinetyDegreeTest: 100.0% \ngradingTools.comp999junit.assignment1.testcases.APointAngleFortyFiveDegreeTest: 100.0% \ngradingTools.comp999junit.assignment1.testcases.APointAngleMinusNinetyDegreeTest: 100.0% \n","summary":""},{"score":15.0,"results":[{"notes":"","percentage":1.0,"name":"gradingTools.comp999junit.assignment1.testcases.APointRadiusTest","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":true,"name":"APointRadiusTest","points":15.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"APointRadiusTest                                       %.1f / 15.0 (Extra credit)"},"autoNotes":"","message":"gradingTools.comp999junit.assignment1.testcases.APointRadiusTest: 100.0% \n","summary":""},{"score":6.0,"results":[{"notes":"","percentage":1.0,"name":"gradingTools.comp999junit.assignment1.testcases.autoproxyreference.AnAutoPointProxy","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"AnAutoPointProxy","points":6.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"AnAutoPointProxy                                       %.1f /  6.0"},"autoNotes":"","message":"gradingTools.comp999junit.assignment1.testcases.autoproxyreference.AnAutoPointProxy: 100.0% \n","summary":""}],"restrictionResults":[],"comments":"","latePenalty":1.0,"sourcePoints":0.0,"score":37.0,"gradingFeatures":[{"featureName":"Angle Tests","score":16.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/Angle Tests.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/ManualNotes-Angle Tests.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/AutoNotes-Angle Tests.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Angle Tests                                            %.1f / 16.0","output":"*****************************(Angle Tests)*****************************\n### gradingTools.comp999junit.assignment1.testcases.APointAngleZeroDegreeTest: 1.0\ncalling constructor: public ACartesianPoint(int,int) 10, 0\ncalled constructor: public ACartesianPoint(int,int) 10, 0\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@16298a07\nSuccessfully Created Cartesian Point:ACartesianPoint@16298a07 with parameters, x: 10 y 0\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:10.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:0.0\n### gradingTools.comp999junit.assignment1.testcases.APointAngleNinetyDegreeTest: 1.0\ncalling constructor: public ACartesianPoint(int,int) 0, 10\ncalled constructor: public ACartesianPoint(int,int) 0, 10\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@18ee76b2\nSuccessfully Created Cartesian Point:ACartesianPoint@18ee76b2 with parameters, x: 0 y 10\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:10.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:1.5707963267948966\n### gradingTools.comp999junit.assignment1.testcases.APointAngleFortyFiveDegreeTest: 1.0\ncalling constructor: public ACartesianPoint(int,int) 10, 10\ncalled constructor: public ACartesianPoint(int,int) 10, 10\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@1cd1e177\nSuccessfully Created Cartesian Point:ACartesianPoint@1cd1e177 with parameters, x: 10 y 10\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:14.142135623730951\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:0.7853981633974483\n### gradingTools.comp999junit.assignment1.testcases.APointAngleMinusNinetyDegreeTest: 1.0\ncalling constructor: public ACartesianPoint(int,int) 0, -10\ncalled constructor: public ACartesianPoint(int,int) 0, -10\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@59d37c89\nSuccessfully Created Cartesian Point:ACartesianPoint@59d37c89 with parameters, x: 0 y -10\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:10.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:-1.5707963267948966\n","feature":{"manual":false,"extraCredit":false,"name":"Angle Tests","points":16.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Angle Tests                                            %.1f / 16.0"},"validate":false,"selected":false,"manual":false,"max":16.0,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/Results-Angle Tests.txt","restriction":false,"partialCredit":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false},{"featureName":"APointRadiusTest","score":15.0,"graded":true,"autoGradable":true,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/APointRadiusTest.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/ManualNotes-APointRadiusTest.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/AutoNotes-APointRadiusTest.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"APointRadiusTest                                       %.1f / 15.0 (Extra credit)","output":"*****************************(APointRadiusTest)*****************************\n### gradingTools.comp999junit.assignment1.testcases.APointRadiusTest: 1.0\ncalling constructor: public ACartesianPoint(int,int) 10, 10\ncalled constructor: public ACartesianPoint(int,int) 10, 10\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@3f0ac06\nSuccessfully Created Cartesian Point:ACartesianPoint@3f0ac06 with parameters, x: 10 y 10\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:14.142135623730951\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:0.7853981633974483\ncalling constructor: public ACartesianPoint(int,int) 5, 0\ncalled constructor: public ACartesianPoint(int,int) 5, 0\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@6840012c\nSuccessfully Created Cartesian Point:ACartesianPoint@6840012c with parameters, x: 5 y 0\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:5.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:0.0\ncalling constructor: public ACartesianPoint(int,int) 0, 7\ncalled constructor: public ACartesianPoint(int,int) 0, 7\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@7b898f0a\nSuccessfully Created Cartesian Point:ACartesianPoint@7b898f0a with parameters, x: 0 y 7\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:7.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:1.5707963267948966\ncalling constructor: public ACartesianPoint(int,int) 10, 10\ncalled constructor: public ACartesianPoint(int,int) 10, 10\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@39fc83c6\nSuccessfully Created Cartesian Point:ACartesianPoint@39fc83c6 with parameters, x: 10 y 10\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:14.142135623730951\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:0.7853981633974483\ncalling constructor: public ACartesianPoint(int,int) 0, -10\ncalled constructor: public ACartesianPoint(int,int) 0, -10\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@3f6a8863\nSuccessfully Created Cartesian Point:ACartesianPoint@3f6a8863 with parameters, x: 0 y -10\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:10.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:-1.5707963267948966\n","feature":{"manual":false,"extraCredit":true,"name":"APointRadiusTest","points":15.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"APointRadiusTest                                       %.1f / 15.0 (Extra credit)"},"validate":false,"selected":false,"manual":false,"max":15.0,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/Results-APointRadiusTest.txt","restriction":false,"partialCredit":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false},{"featureName":"AnAutoPointProxy","score":6.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/AnAutoPointProxy.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/ManualNotes-AnAutoPointProxy.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/AutoNotes-AnAutoPointProxy.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"AnAutoPointProxy                                       %.1f /  6.0","output":"*****************************(AnAutoPointProxy)*****************************\n### gradingTools.comp999junit.assignment1.testcases.autoproxyreference.AnAutoPointProxy: 1.0\ncalling constructor: public ACartesianPoint(int,int) 0, 0\ncalled constructor: public ACartesianPoint(int,int) 0, 0\ncalling method: public java.lang.String java.lang.Object.toString() with args \ncalled method: public java.lang.String java.lang.Object.toString() with args: result:ACartesianPoint@574ba7c3\nSuccessfully Created Cartesian Point:ACartesianPoint@574ba7c3 with parameters, x: 0 y 0\ncalling method: public double ACartesianPoint.getRadius() with args \ncalled method: public double ACartesianPoint.getRadius() with args: result:0.0\ncalling method: public double ACartesianPoint.getAngle() with args \ncalled method: public double ACartesianPoint.getAngle() with args: result:0.0\n","feature":{"manual":false,"extraCredit":false,"name":"AnAutoPointProxy","points":6.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"AnAutoPointProxy                                       %.1f /  6.0"},"validate":false,"selected":false,"manual":false,"max":6.0,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp999JUnit/Assignment 1/All, Correct (acorrect)/Feedback Attachment(s)/Results-AnAutoPointProxy.txt","restriction":false,"partialCredit":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false}],"sourceCodeTAComments":""}