//START OF FILE: src/program3.java
/******************************************************************
 * Program or Assignment #: Assignment 3
 *
 * Programmer: Jacob Bartel
 *
 * Due Date: N/A
 *
 * COMP110-002, Spring 2014       Instructor: Prof. Jay Aikat
 *
 * Pledge: I have neither given nor received unauthorized aid
 *         on this program. 
 *
 * Description: Takes a string and tests to see whether or not it's a palindrome
 *
 * Input: A string
 *
 * Output: Error message if the string isn't the desired length otherwise it informs the user
 * 	whether the string is a palindrome or not
 *
 ******************************************************************/

import java.util.Scanner;

public class Program3 {
	
	public static void main(String args[]) {

		Scanner kb = new Scanner(System.in);
		while (true) {
			
			System.out.println("Please enter a line of text.");
			
			String input = kb.nextLine();
			System.out.println("\tSaw input:"+input);
			
			System.out.println("Please indicate which computation you'd like to perform.");
			String option = kb.nextLine();
			System.out.println("\tSaw option:"+option);
			
			if (option.equalsIgnoreCase("check if palindrome")) {
				
				System.out.println(isPalindrome(input) + "\n");
				
			} else if (option.equalsIgnoreCase("compute rounded sum")) {
				
				System.out.println(computeRoundedSum(input) + "\n");
				
			} else if (option.equalsIgnoreCase("count unique characters")) {
				
				System.out.println(countUniqueCharacters(input) + "\n");
				
			} else if (option.equalsIgnoreCase("reverse word characters")) {
				
				System.out.println(reverseWordCharacters(input) + "\n");
				
			} else {
				System.out.println("Please enter a valid option.\n");
			}
			
		}
		
	}
	
	public static boolean isPalindrome(String s) {
		
		// reverse the String
		String reverse = "";
		for (int i = s.length()-1; i >= 0; i--) {
			reverse += s.charAt(i);
		}
		// return true if the reversed String is equal to the original String, ignoring case
		if (reverse.equalsIgnoreCase(s)) {
			return true;
		}
		
		// otherwise, return false
		return false;
		
	}
	
	public static double computeRoundedSum(String s) {
		
		// split space-delimited numbers into array
		String nums[] = s.split(" ");
		double sum = 0;
		for (int i = 0; i < nums.length; i++) {
			// add the value after converting String representation to double
			sum += Double.parseDouble(nums[i]);
		}
		return Math.round(sum);
		
	}
	
	public static int countUniqueCharacters(String s) {
		
		int uniqueCount = 0;
		boolean isUnique = true;
		//s = s.toLowerCase();
		// iterate through each character of the String
		for (int i = 0; i < s.length(); i++) {
			// reset isUnique to true before checking each character in the String
			isUnique = true;
			// check if it is the same as any of the other characters in the String
			for (int j = i+1; j < s.length(); j++) {
				//System.out.println("comparing " + s.charAt(i) + " to " + s.charAt(j));
				if (s.charAt(i) == s.charAt(j) && i != j) {
					isUnique = false;
				} 
			}
			if (isUnique) {
				uniqueCount += 1;
			}
		}
		
		return uniqueCount;
		
	}
	
	public static String reverseWordCharacters(String s) {
		
		String[] words = s.split(" ");
		String[] reversedWords = new String[words.length];
		// for each word in the line
		for (int i = 0; i < words.length; i++) {
			// reverse only that word
			String reverse = "";
			for (int j = words[i].length()-1; j >= 0; j--) {
				reverse += words[i].charAt(j);
			}
			reversedWords[i] = reverse;
		}
		// build a new String with words' characters reversed but not the order of words
		String reversedLine = "";
		for (int k = 0; k < reversedWords.length; k++) {
			reversedLine += reversedWords[k] + " ";
		}
		return reversedLine;
	}

}

/**********************************************************************************************

Sample Output:

Please enter a line of text.
racecar racecar
Please indicate which computation you'd like to perform.
check if palindrome
true

Please enter a line of text.
I am not a palindrome
Please indicate which computation you'd like to perform.
check if palindrome
false

Please enter a line of text.
42.5 7.2 1.2
Please indicate which computation you'd like to perform.
compute rounded sum
51.0

Please enter a line of text.
5.3 4.1
Please indicate which computation you'd like to perform.
compute rounded sum
9.0

Please enter a line of text.
abc
Please indicate which computation you'd like to perform.
count unique characters
3

Please enter a line of text.
aAbccd
Please indicate which computation you'd like to perform.
count unique characters
4

Please enter a line of text.
This is a test string
Please indicate which computation you'd like to perform.
reverse word characters
sihT si a tset gnirts 

Please enter a line of text.
blah
Please indicate which computation you'd like to perform.
blah
Please enter a valid option.

**********************************************************************************************/
//END OF FILE
