*****************************(Pass/Fail Token Classes Implemented)*****************************
Testcase:Pass Command Bean Case
Finding class matching:null, pass, .*pass.*, .*pass.*
Finding constructor matching:class java.lang.String
calling constructor: public mp.tokens.PassToken(java.lang.String) PASS
called constructor: public mp.tokens.PassToken(java.lang.String) PASS
calling method: public void mp.tokens.ABasicToken.setInput(java.lang.String) with args PASS
called method: public void mp.tokens.ABasicToken.setInput(java.lang.String) with args:PASS result:null
calling method: public java.lang.String mp.tokens.AValueToken.getValue() with args 
called method: public java.lang.String mp.tokens.AValueToken.getValue() with args: result:pass
*****************************(Pass/Fail Token Classes Implemented)*****************************
Testcase:Fail Command Bean Case
Finding class matching:null, fail, .*fail.*, .*fail.*
Finding constructor matching:class java.lang.String
calling constructor: public mp.tokens.FailToken(java.lang.String) FAIL
called constructor: public mp.tokens.FailToken(java.lang.String) FAIL
calling method: public void mp.tokens.ABasicToken.setInput(java.lang.String) with args FAIL
called method: public void mp.tokens.ABasicToken.setInput(java.lang.String) with args:FAIL result:null
calling method: public java.lang.String mp.tokens.AValueToken.getValue() with args 
called method: public java.lang.String mp.tokens.AValueToken.getValue() with args: result:fail
*****************************(Synchronized Methods)*****************************
calling constructor: public mp.ui.ABridgeScene() 
called constructor: public mp.ui.ABridgeScene() 
calling constructor: public mp.bean.ACommandInterpreter(mp.ui.BridgeScene,mp.bean.animation.BroadcastingClearanceManager) mp.ui.ABridgeScene@16016840, null
called constructor: public mp.bean.ACommandInterpreter(mp.ui.BridgeScene,mp.bean.animation.BroadcastingClearanceManager) mp.ui.ABridgeScene@16016840, null
calling methods
Adding traceable listener
calling method: public void mp.bean.ACommandInterpreter.asyncArthur() with args 
called method: public void mp.bean.ACommandInterpreter.asyncArthur() with args: result:null
calling method: public void mp.bean.ACommandInterpreter.asyncArthur() with args 
called method: public void mp.bean.ACommandInterpreter.asyncArthur() with args: result:null
child 1 starts:Avatar Animator Thread 1
waiting for threads
Num threads after execution:7
Finished waiting for threads
Stopping thread:Thread[Avatar Animator Thread 1,5,main]
child 2 starts:Avatar Animator Thread 2
Num threads after execution:7
child 2 executes after child 1
### 'asynchronousArthur' method exists test case: 1.0
Removing traceable listener
