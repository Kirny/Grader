*****************************(Pass/Fail Token Classes Implemented)*****************************
Testcase:Pass Command Bean Case
Finding class matching:null, pass, .*pass.*, .*pass.*
Finding constructor matching:class java.lang.String
calling constructor: public grail.command.PassCommandToken(java.lang.String) PASS
called constructor: public grail.command.PassCommandToken(java.lang.String) PASS
calling method: public void grail.tokens.BasicStoreToken.setInput(java.lang.String) with args PASS
called method: public void grail.tokens.BasicStoreToken.setInput(java.lang.String) with args:PASS result:null
calling method: public java.lang.String grail.tokens.WordStoreToken.getValue() with args 
called method: public java.lang.String grail.tokens.WordStoreToken.getValue() with args: result:pass
*****************************(Pass/Fail Token Classes Implemented)*****************************
Testcase:Fail Command Bean Case
Finding class matching:null, fail, .*fail.*, .*fail.*
Finding constructor matching:class java.lang.String
calling constructor: public grail.command.FailCommandToken(java.lang.String) FAIL
called constructor: public grail.command.FailCommandToken(java.lang.String) FAIL
calling method: public void grail.tokens.BasicStoreToken.setInput(java.lang.String) with args FAIL
called method: public void grail.tokens.BasicStoreToken.setInput(java.lang.String) with args:FAIL result:null
calling method: public java.lang.String grail.tokens.WordStoreToken.getValue() with args 
called method: public java.lang.String grail.tokens.WordStoreToken.getValue() with args: result:fail
*****************************(Synchronized Methods)*****************************
Discarding constructor with parms[]
calling constructor: public grail.scene.BasicBridgeScene() 
called constructor: public grail.scene.BasicBridgeScene() 
calling constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@615c5015
called constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@615c5015
calling methods
E***Class:grail.helpers.BasicTable does not follow declared pattern: Hashmap Pattern. Ignoring pattern declaration.
W***Assuming implicit pattern: Hashtable Pattern instead of: Hashmap Pattern
Adding traceable listener
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousArthur() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousArthur() with args: result:null
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousArthur() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousArthur() with args: result:null
waiting for threads
child 1 starts
Finished waiting for threads
Stropping thread:Thread[Thread-17,5,main]
### 'asynchronousArthur' method exists test case: 1.0
Removing traceable listener
*****************************(Synchronized Methods)*****************************
Discarding constructor with parms[]
calling constructor: public grail.scene.BasicBridgeScene() 
called constructor: public grail.scene.BasicBridgeScene() 
calling constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@3d9f748e
called constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@3d9f748e
calling methods
Adding traceable listener
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousGalahad() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousGalahad() with args: result:null
child 1 starts
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousGalahad() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousGalahad() with args: result:null
waiting for threads
child 2 starts
child 1 executes after child 2
child 2 executes after child 1
Finished waiting for threads
Stropping thread:Thread[Thread-18,5,]
Stropping thread:Thread[Thread-19,5,main]
### 'asynchronousGalahad' method exists test case: 0.0
Removing traceable listener
*****************************(Synchronized Methods)*****************************
Discarding constructor with parms[]
calling constructor: public grail.scene.BasicBridgeScene() 
called constructor: public grail.scene.BasicBridgeScene() 
calling constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@19706f8a
called constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@19706f8a
calling methods
Adding traceable listener
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousLancelot() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousLancelot() with args: result:null
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousLancelot() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousLancelot() with args: result:null
waiting for threads
child 1 starts
child 2 starts
child 2 executes after child 1
child 1 executes after child 2
Finished waiting for threads
Stropping thread:Thread[Thread-22,5,main]
Stropping thread:Thread[Thread-20,5,main]
### 'asynchronousLancelot' method exists test case: 0.0
Removing traceable listener
*****************************(Synchronized Methods)*****************************
Discarding constructor with parms[]
calling constructor: public grail.scene.BasicBridgeScene() 
called constructor: public grail.scene.BasicBridgeScene() 
calling constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@113d5f08
called constructor: public grail.commander.BasicCommandInterpreter(grail.scene.BridgeScene) grail.scene.BasicBridgeScene@113d5f08
calling methods
Adding traceable listener
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousRobin() with args 
called method: public void grail.commander.BasicCommandInterpreter.asynchronousRobin() with args: result:null
calling method: public void grail.commander.BasicCommandInterpreter.asynchronousRobin() with args 
child 1 starts
called method: public void grail.commander.BasicCommandInterpreter.asynchronousRobin() with args: result:null
waiting for threads
Finished waiting for threads
Stropping thread:Thread[Thread-23,5,main]
### 'asynchronousRobin' method exists test case: 1.0
Removing traceable listener
