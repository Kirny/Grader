*****************************(Precondition execution)*****************************
calling constructor: public mp.Scene.TheBridgeScene() 
called constructor: public mp.Scene.TheBridgeScene() 
W***Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public static void mp.Scene.AnAvatar.addPropertyChangeListener(mp.Scene.Avatar,java.beans.PropertyChangeListener)
W***Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public static void mp.Scene.TheGorge.addPropertyChangeListener(mp.Scene.Gorge,java.beans.PropertyChangeListener)
Adding traceable listner
calling method: public mp.Scene.Avatar mp.Scene.TheBridgeScene.getArthur() with args 
called method: public mp.Scene.Avatar mp.Scene.TheBridgeScene.getArthur() with args: result:mp.Scene.AnAvatar@379ce046
calling method: public mp.Scene.Avatar mp.Scene.TheBridgeScene.getLancelot() with args 
called method: public mp.Scene.Avatar mp.Scene.TheBridgeScene.getLancelot() with args: result:mp.Scene.AnAvatar@46d63dbb
calling method: public void mp.Scene.TheBridgeScene.approach(mp.Scene.Avatar) with args mp.Scene.AnAvatar@379ce046
called method: public void mp.Scene.TheBridgeScene.approach(mp.Scene.Avatar) with args:mp.Scene.AnAvatar@379ce046 result:null
calling method: public boolean mp.Scene.TheBridgeScene.preApproach() with args 
called method: public boolean mp.Scene.TheBridgeScene.preApproach() with args: result:false
calling method: public boolean mp.Scene.TheBridgeScene.prePassedScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.prePassedScene() with args: result:true
calling method: public boolean mp.Scene.TheBridgeScene.preFailedScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.preFailedScene() with args: result:true
calling method: public boolean mp.Scene.TheBridgeScene.preSayScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.preSayScene() with args: result:true
calling method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args Name?
called method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args:Name? result:null
calling method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args Arthur?
called method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args:Arthur? result:null
calling method: public void mp.Scene.TheBridgeScene.passedScene() with args 
called method: public void mp.Scene.TheBridgeScene.passedScene() with args: result:null
calling method: public boolean mp.Scene.TheBridgeScene.preApproach() with args 
called method: public boolean mp.Scene.TheBridgeScene.preApproach() with args: result:true
calling method: public boolean mp.Scene.TheBridgeScene.preFailedScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.preFailedScene() with args: result:false
calling method: public boolean mp.Scene.TheBridgeScene.prePassedScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.prePassedScene() with args: result:false
calling method: public boolean mp.Scene.TheBridgeScene.preSayScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.preSayScene() with args: result:false
calling method: public void mp.Scene.TheBridgeScene.approach(mp.Scene.Avatar) with args mp.Scene.AnAvatar@46d63dbb
called method: public void mp.Scene.TheBridgeScene.approach(mp.Scene.Avatar) with args:mp.Scene.AnAvatar@46d63dbb result:null
calling method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args Name
called method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args:Name result:null
calling method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args Lancelot
called method: public void mp.Scene.TheBridgeScene.sayScene(java.lang.String) with args:Lancelot result:null
calling method: public void mp.Scene.TheBridgeScene.failedScene() with args 
W***Lower Y = -1 < 0 of .lancelot.arms.leftLine (mp.Scene.ALine@7fb53256)
W***Lower Y = -1 < 0 of .lancelot.arms.rightLine (mp.Scene.ALine@3d90eeb3)
W***Lower Y = -1 < 0 of .lancelot.torso (mp.Scene.ALine@138aa3cc)
W***Lower Y = -10 < 0 of .lancelot.text (mp.Scene.AStringShape@30839e44)
called method: public void mp.Scene.TheBridgeScene.failedScene() with args: result:null
calling method: public boolean mp.Scene.TheBridgeScene.preApproach() with args 
called method: public boolean mp.Scene.TheBridgeScene.preApproach() with args: result:true
calling method: public boolean mp.Scene.TheBridgeScene.preFailedScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.preFailedScene() with args: result:false
calling method: public boolean mp.Scene.TheBridgeScene.prePassedScene() with args 
called method: public boolean mp.Scene.TheBridgeScene.prePassedScene() with args: result:false
Pre tags:[approach, say, pass, fail, pass, pass, approach, say, pass, fail, approach, say, pass, fail, pass, pass, approach, say, pass, fail]
Pre values:[false, true, true, true, false, true, true, false, false, false, false, true, true, true, false, true, true, false, false, false]
removing traceable listner
Expected pres:false, true, true, true, true, false, false, false, true, false, false
Actial pres:  false, true, true, true, true, false, false, false, true, false, false
Expected names: approach, passed, failed, say, pass, fail
Actual name set: [approach, say, pass, fail, pass, pass, approach, say, pass, fail, approach, say, pass, fail, pass, pass, approach, say, pass, fail]
### Precondition execution Test Case: 1.0
*****************************(Command interpreter Execution)*****************************
java.lang.NullPointerException
    at java.util.Objects.requireNonNull(Objects.java:203)
    at gradingTools.comp401f15.assignment7.testCases.commandInterpreter.SayCommandInterpretedTestCase.test(SayCommandInterpretedTestCase.java:66)
    at gradingTools.comp401f15.assignment10.testCases.SayCommandPartiallyInterpretedTestCase.test(SayCommandPartiallyInterpretedTestCase.java:12)
    at framework.grading.testing.Checkable.check(Checkable.java:127)
    at framework.grading.testing.Feature.check(Feature.java:111)
    at framework.grading.testing.Checkable.check(Checkable.java:188)
    at framework.grading.FrameworkProjectRequirements.checkFeatures(FrameworkProjectRequirements.java:152)
    at grader.steppers.AnAutoVisitBehavior.autoGrade(AnAutoVisitBehavior.java:614)
    at grader.steppers.AnAutoVisitBehavior.setProject(AnAutoVisitBehavior.java:258)
    at grader.steppers.AnOverviewProjectStepper.setProject(AnOverviewProjectStepper.java:508)
    at grader.steppers.AnOverviewProjectStepper.setProject(AnOverviewProjectStepper.java:296)
    at grader.steppers.AnOverviewProjectStepper.runProjectsInteractively(AnOverviewProjectStepper.java:1432)
    at grader.steppers.AMainProjectStepper.runProjectsInteractively(AMainProjectStepper.java:235)
    at grader.steppers.AComplexProjectStepper.runProjectsInteractively(AComplexProjectStepper.java:235)
    at grader.sakai.project.ASakaiProjectDatabase.startProjectStepper(ASakaiProjectDatabase.java:923)
    at grader.navigation.automatic.AnAutomaticProjectNavigator.navigate(AnAutomaticProjectNavigator.java:41)
    at grader.navigation.hybrid.AHybridProjectNavigator.navigate(AHybridProjectNavigator.java:22)
    at grader.navigation.AProjectNavigator.navigate(AProjectNavigator.java:24)
    at gradingTools.Driver.drive(Driver.java:299)
    at gradingTools.Driver.main(Driver.java:364)
### Say command test case: 0.0
*****************************(Command interpreter Execution)*****************************
java.lang.NullPointerException
    at java.util.Objects.requireNonNull(Objects.java:203)
    at gradingTools.comp401f15.assignment7.testCases.commandInterpreter.MoveCommandInterpretedTestCase.test(MoveCommandInterpretedTestCase.java:65)
    at gradingTools.comp401f15.assignment10.testCases.MoveCommandPartiallyInterpretedTestCase.test(MoveCommandPartiallyInterpretedTestCase.java:13)
    at framework.grading.testing.Checkable.check(Checkable.java:127)
    at framework.grading.testing.Feature.check(Feature.java:111)
    at framework.grading.testing.Checkable.check(Checkable.java:188)
    at framework.grading.FrameworkProjectRequirements.checkFeatures(FrameworkProjectRequirements.java:152)
    at grader.steppers.AnAutoVisitBehavior.autoGrade(AnAutoVisitBehavior.java:614)
    at grader.steppers.AnAutoVisitBehavior.setProject(AnAutoVisitBehavior.java:258)
    at grader.steppers.AnOverviewProjectStepper.setProject(AnOverviewProjectStepper.java:508)
    at grader.steppers.AnOverviewProjectStepper.setProject(AnOverviewProjectStepper.java:296)
    at grader.steppers.AnOverviewProjectStepper.runProjectsInteractively(AnOverviewProjectStepper.java:1432)
    at grader.steppers.AMainProjectStepper.runProjectsInteractively(AMainProjectStepper.java:235)
    at grader.steppers.AComplexProjectStepper.runProjectsInteractively(AComplexProjectStepper.java:235)
    at grader.sakai.project.ASakaiProjectDatabase.startProjectStepper(ASakaiProjectDatabase.java:923)
    at grader.navigation.automatic.AnAutomaticProjectNavigator.navigate(AnAutomaticProjectNavigator.java:41)
    at grader.navigation.hybrid.AHybridProjectNavigator.navigate(AHybridProjectNavigator.java:22)
    at grader.navigation.AProjectNavigator.navigate(AProjectNavigator.java:24)
    at gradingTools.Driver.drive(Driver.java:299)
    at gradingTools.Driver.main(Driver.java:364)
### Move command test case: 0.0
