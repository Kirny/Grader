{"userId":"Mistakes, Many(mmany)","featureResults":[{"score":0.0,"results":[{"notes":"","percentage":1.0,"name":"CommandInterpreter Implements class java.lang.Object","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Previous Classes Exist (No pts)","points":0.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Previous Classes Exist (No pts)                        %.1f /  0.0"},"autoNotes":"","message":"CommandInterpreter Implements class java.lang.Object: 100.0% \n","summary":""},{"score":8.0,"results":[{"notes":"","percentage":1.0,"name":"approach precondition test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"say precondition test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"passed precondition test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"failed precondition test case","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Precondition structure","points":8.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Precondition structure                                 %.1f /  8.0"},"autoNotes":"","message":"approach precondition test case: 100.0% \nsay precondition test case: 100.0% \npassed precondition test case: 100.0% \nfailed precondition test case: 100.0% \n","summary":""},{"score":22.0,"results":[{"notes":"","percentage":1.0,"name":"Precondition execution Test Case","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Precondition execution","points":22.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Precondition execution                                 %.1f / 22.0"},"autoNotes":"","message":"Precondition execution Test Case: 100.0% \n","summary":""},{"score":10.0,"results":[{"notes":"","percentage":1.0,"name":"SayCommand Implements interface java.lang.Runnable","autoGraded":true},{"notes":"","percentage":1.0,"name":"MoveCommand Implements interface java.lang.Runnable","autoGraded":true},{"notes":"","percentage":1.0,"name":"AnimatingCommand Implements interface java.lang.Runnable","autoGraded":true},{"notes":"","percentage":1.0,"name":"SayCommand!:@BridgeScene; String","autoGraded":true},{"notes":"","percentage":1.0,"name":"MoveCommand!:@Avatar; int; int","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Command Classes Structure","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command Classes Structure                              %.1f / 10.0"},"autoNotes":"","message":"SayCommand Implements interface java.lang.Runnable: 100.0% \nMoveCommand Implements interface java.lang.Runnable: 100.0% \nAnimatingCommand Implements interface java.lang.Runnable: 100.0% \nSayCommand!:@BridgeScene; String: 100.0% \nMoveCommand!:@Avatar; int; int: 100.0% \n","summary":""},{"score":10.0,"results":[{"notes":"","percentage":1.0,"name":"Animator Implements class java.lang.Object","autoGraded":true},{"notes":"","percentage":1.0,"name":"Animator!@animateAvatar:\\*->void","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Animator Structure","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animator Structure                                     %.1f / 10.0"},"autoNotes":"","message":"Animator Implements class java.lang.Object: 100.0% \nAnimator!@animateAvatar:\\*->void: 100.0% \n","summary":""},{"score":28.0,"results":[{"notes":"","percentage":1.0,"name":"'asynchronousArthur' method exists test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"'asynchronousLancelot' method exists test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"'asynchronousRobin' method exists test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"'asynchronousGalahad' method exists test case","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Async Method Execution","points":28.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Async Method Execution                                 %.1f / 28.0"},"autoNotes":"","message":"'asynchronousArthur' method exists test case: 100.0% \n'asynchronousLancelot' method exists test case: 100.0% \n'asynchronousRobin' method exists test case: 100.0% \n'asynchronousGalahad' method exists test case: 100.0% \n","summary":""},{"score":0.0,"results":[{"notes":"CommandInterpreter not found by checkstyle","percentage":0.0,"name":"CommandInterpreter!@parseSay:\\*->Runnable","autoGraded":true},{"notes":"CommandInterpreter not found by checkstyle","percentage":0.0,"name":"CommandInterpreter!@parseMove:\\*->Runnable","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Command Interpreter Structure","points":8.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command Interpreter Structure                          %.1f /  8.0"},"autoNotes":"","message":"CommandInterpreter!@parseSay:\\*->Runnable: 0.0% \n  -- CommandInterpreter not found by checkstyle\nCommandInterpreter!@parseMove:\\*->Runnable: 0.0% \n  -- CommandInterpreter not found by checkstyle\n","summary":"Notes about Command Interpreter Structure:\n * From test case \"CommandInterpreter!@parseSay:\\*->Runnable\": CommandInterpreter not found by checkstyle\n * From test case \"CommandInterpreter!@parseMove:\\*->Runnable\": CommandInterpreter not found by checkstyle"},{"score":10.0,"results":[{"notes":"","percentage":1.0,"name":"Say command test case","autoGraded":true},{"notes":"","percentage":1.0,"name":"Move command test case","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Command interpreter Execution","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command interpreter Execution                          %.1f / 10.0"},"autoNotes":"","message":"Say command test case: 100.0% \nMove command test case: 100.0% \n","summary":""},{"score":2.0,"results":[{"notes":"","percentage":1.0,"name":"asynchronousGuard animating method test case","autoGraded":true}],"notes":"","target":{"manual":false,"extraCredit":true,"name":"Guard method exists","points":2.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Guard method exists                                    %.1f /  2.0 (Extra credit)"},"autoNotes":"","message":"asynchronousGuard animating method test case: 100.0% \n","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":true,"name":"Guard claps","points":4.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Guard claps                                            %.1f /  4.0 (Extra credit)"},"autoNotes":"","message":"","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":true,"name":"Command Interpreter Buttons ","points":5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command Interpreter Buttons                            %.1f /  5.0 (Extra credit)"},"autoNotes":"","message":"","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":true,"name":"Dynamically  Enabled Buttons","points":5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Dynamically  Enabled Buttons                           %.1f /  5.0 (Extra credit)"},"autoNotes":"","message":"","summary":""}],"restrictionResults":[],"comments":"","latePenalty":1.05,"sourcePoints":0.0,"score":90.0,"gradingFeatures":[{"featureName":"Previous Classes Exist (No pts)","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Previous Classes Exist (No pts).txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Previous Classes Exist (No pts).txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Previous Classes Exist (No pts).txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Previous Classes Exist (No pts)                        %.1f /  0.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Previous Classes Exist (No pts)","points":0.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Previous Classes Exist (No pts)                        %.1f /  0.0"},"validate":false,"manual":false,"max":0.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Previous Classes Exist (No pts).txt","restriction":true,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Precondition structure","score":8.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Precondition structure.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Precondition structure.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Precondition structure.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Precondition structure                                 %.1f /  8.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Precondition structure","points":8.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Precondition structure                                 %.1f /  8.0"},"validate":false,"manual":false,"max":8.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Precondition structure.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Precondition execution","score":22.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Precondition execution.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Precondition execution.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Precondition execution.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Precondition execution                                 %.1f / 22.0","output":"*****************************(Precondition execution)*****************************\ncalling constructor: public main.ABridgeScene() \ncalled constructor: public main.ABridgeScene() \nAdding traceable listner\ncalling method: public mp.shapes.Avatar main.ABridgeScene.getArthur() with args \ncalled method: public mp.shapes.Avatar main.ABridgeScene.getArthur() with args: result:mp.shapes.AnAvatar@48cdb156\ncalling method: public mp.shapes.Avatar main.ABridgeScene.getLancelot() with args \ncalled method: public mp.shapes.Avatar main.ABridgeScene.getLancelot() with args: result:mp.shapes.AnAvatar@7a572ea0\ncalling method: public void main.ABridgeScene.approach(mp.shapes.Avatar) with args mp.shapes.AnAvatar@48cdb156\ncalled method: public void main.ABridgeScene.approach(mp.shapes.Avatar) with args:mp.shapes.AnAvatar@48cdb156 result:null\ncalling method: public boolean main.ABridgeScene.preApproach() with args \ncalled method: public boolean main.ABridgeScene.preApproach() with args: result:false\ncalling method: public boolean main.ABridgeScene.prePassed() with args \ncalled method: public boolean main.ABridgeScene.prePassed() with args: result:true\ncalling method: public boolean main.ABridgeScene.preFailed() with args \ncalled method: public boolean main.ABridgeScene.preFailed() with args: result:true\ncalling method: public boolean main.ABridgeScene.preSay() with args \ncalled method: public boolean main.ABridgeScene.preSay() with args: result:true\ncalling method: public void main.ABridgeScene.say(java.lang.String) with args Name?\ncalled method: public void main.ABridgeScene.say(java.lang.String) with args:Name? result:null\ncalling method: public void main.ABridgeScene.say(java.lang.String) with args Arthur?\ncalled method: public void main.ABridgeScene.say(java.lang.String) with args:Arthur? result:null\ncalling method: public void main.ABridgeScene.passed() with args \ncalled method: public void main.ABridgeScene.passed() with args: result:null\ncalling method: public boolean main.ABridgeScene.preApproach() with args \ncalled method: public boolean main.ABridgeScene.preApproach() with args: result:true\ncalling method: public boolean main.ABridgeScene.preFailed() with args \ncalled method: public boolean main.ABridgeScene.preFailed() with args: result:false\ncalling method: public boolean main.ABridgeScene.prePassed() with args \ncalled method: public boolean main.ABridgeScene.prePassed() with args: result:false\ncalling method: public boolean main.ABridgeScene.preSay() with args \ncalled method: public boolean main.ABridgeScene.preSay() with args: result:false\ncalling method: public void main.ABridgeScene.approach(mp.shapes.Avatar) with args mp.shapes.AnAvatar@7a572ea0\ncalled method: public void main.ABridgeScene.approach(mp.shapes.Avatar) with args:mp.shapes.AnAvatar@7a572ea0 result:null\ncalling method: public void main.ABridgeScene.say(java.lang.String) with args Name\ncalled method: public void main.ABridgeScene.say(java.lang.String) with args:Name result:null\ncalling method: public void main.ABridgeScene.say(java.lang.String) with args Lancelot\ncalled method: public void main.ABridgeScene.say(java.lang.String) with args:Lancelot result:null\ncalling method: public void main.ABridgeScene.failed() with args \ncalled method: public void main.ABridgeScene.failed() with args: result:null\ncalling method: public boolean main.ABridgeScene.preApproach() with args \ncalled method: public boolean main.ABridgeScene.preApproach() with args: result:true\ncalling method: public boolean main.ABridgeScene.preFailed() with args \ncalled method: public boolean main.ABridgeScene.preFailed() with args: result:false\ncalling method: public boolean main.ABridgeScene.prePassed() with args \ncalled method: public boolean main.ABridgeScene.prePassed() with args: result:false\nPre tags:[approach, failed, say, say, passed, passed, passed, failed, approach, say, passed, approach, failed, say, say, passed, passed, passed, failed, approach, say, passed]\nPre values:[false, true, true, true, true, true, false, false, true, false, false, false, true, true, true, true, true, false, false, true, false, false]\nremoving traceable listner\nExpected pres:false, true, true, true, true, false, false, false, true, false, false\nActial pres:  false, true, true, true, true, false, false, false, true, false, false\nExpected names: approach, passed, failed, say, pass, fail\nActual name set: [approach, failed, say, say, passed, passed, passed, failed, approach, say, passed, approach, failed, say, say, passed, passed, passed, failed, approach, say, passed]\n### Precondition execution Test Case: 1.0\n","feature":{"manual":false,"extraCredit":false,"name":"Precondition execution","points":22.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Precondition execution                                 %.1f / 22.0"},"validate":false,"manual":false,"max":22.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Precondition execution.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Command Classes Structure","score":10.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Command Classes Structure.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Command Classes Structure.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Command Classes Structure.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Command Classes Structure                              %.1f / 10.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Command Classes Structure","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command Classes Structure                              %.1f / 10.0"},"validate":false,"manual":false,"max":10.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Command Classes Structure.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Animator Structure","score":10.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Animator Structure.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Animator Structure.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Animator Structure.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Animator Structure                                     %.1f / 10.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Animator Structure","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animator Structure                                     %.1f / 10.0"},"validate":false,"manual":false,"max":10.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Animator Structure.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Async Method Execution","score":28.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Async Method Execution.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Async Method Execution.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Async Method Execution.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Async Method Execution                                 %.1f / 28.0","output":"*****************************(Async Method Execution)*****************************\ncalling constructor: public main.AScannerBean() \ncalled constructor: public main.AScannerBean() \ncalling constructor: public main.ABridgeScene() \ncalled constructor: public main.ABridgeScene() \ncalling constructor: public main.ACommandInterpreter(main.ScannerBean,main.BridgeScene) main.AScannerBean@59c427f2, main.ABridgeScene@7bd9f603\ncalled constructor: public main.ACommandInterpreter(main.ScannerBean,main.BridgeScene) main.AScannerBean@59c427f2, main.ABridgeScene@7bd9f603\ncalling methods\nAdding traceable listener\ncalling method: public void main.ACommandInterpreter.animateArthur() with args \ncalled method: public void main.ACommandInterpreter.animateArthur() with args: result:null\nwaiting for threads\nchild 1 starts:Thread-11\nNum threads after execution:6\nFinished waiting for threads\nStopping thread:Thread[Thread-11,5,main]\n### 'asynchronousArthur' method exists test case: 1.0\nRemoving traceable listener\n*****************************(Async Method Execution)*****************************\ncalling methods\nAdding traceable listener\ncalling method: public void main.ACommandInterpreter.animateLancelot() with args \ncalled method: public void main.ACommandInterpreter.animateLancelot() with args: result:null\nwaiting for threads\nchild 1 starts:Thread-12\nNum threads after execution:7\nchild 2 starts:Thread-11\nNum threads after execution:7\nchild 1 executes after child 2\nchild 2 executes after child 1\nFinished waiting for threads\nStopping thread:Thread[Thread-12,5,main]\nStopping thread:Thread[Thread-11,5,main]\n### 'asynchronousLancelot' method exists test case: 1.0\nRemoving traceable listener\n*****************************(Async Method Execution)*****************************\ncalling methods\nAdding traceable listener\ncalling method: public void main.ACommandInterpreter.animateRobin() with args \ncalled method: public void main.ACommandInterpreter.animateRobin() with args: result:null\nwaiting for threads\nchild 1 starts:Thread-13\nNum threads after execution:8\nchild 2 starts:Thread-12\nNum threads after execution:8\nchild 2 executes after child 1\nchild 1 executes after child 2\nFinished waiting for threads\nStopping thread:Thread[Thread-13,5,main]\nStopping thread:Thread[Thread-12,5,main]\n### 'asynchronousRobin' method exists test case: 1.0\nRemoving traceable listener\n*****************************(Async Method Execution)*****************************\ncalling methods\nAdding traceable listener\ncalling method: public void main.ACommandInterpreter.animateGalahad() with args \ncalled method: public void main.ACommandInterpreter.animateGalahad() with args: result:null\nchild 1 starts:Thread-12\nwaiting for threads\nNum threads after execution:8\nchild 2 starts:Thread-13\nNum threads after execution:9\nchild 1 executes after child 2\nchild 2 executes after child 1\nW***Lower Y = -1 < 0 of .lancelot.text (mp.shapes.AStringShape@2e2b9f53)\nW***Lower Y = -2 < 0 of .lancelot.text (mp.shapes.AStringShape@2e2b9f53)\nW***Lower Y = -3 < 0 of .lancelot.text (mp.shapes.AStringShape@2e2b9f53)\nW***Lower Y = -4 < 0 of .lancelot.text (mp.shapes.AStringShape@2e2b9f53)\nW***Lower Y = -5 < 0 of .lancelot.text (mp.shapes.AStringShape@2e2b9f53)\nW***Lower Y = -6 < 0 of .lancelot.text (mp.shapes.AStringShape@2e2b9f53)\nFinished waiting for threads\nStopping thread:Thread[Thread-12,5,main]\nStopping thread:Thread[Thread-13,5,main]\n### 'asynchronousGalahad' method exists test case: 1.0\nRemoving traceable listener\n","feature":{"manual":false,"extraCredit":false,"name":"Async Method Execution","points":28.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Async Method Execution                                 %.1f / 28.0"},"validate":false,"manual":false,"max":28.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Async Method Execution.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Command Interpreter Structure","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Command Interpreter Structure.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Command Interpreter Structure.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Command Interpreter Structure.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- CommandInterpreter not found by checkstyle\n  -- CommandInterpreter not found by checkstyle\n","resultFormat":"Command Interpreter Structure                          %.1f /  8.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Command Interpreter Structure","points":8.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command Interpreter Structure                          %.1f /  8.0"},"validate":false,"manual":false,"max":8.0,"selected":false,"autoWithNotFullCredit":true,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Command Interpreter Structure.txt","restriction":false,"autoNotGraded":false,"fullCredit":false,"manualOverride":true,"partialCredit":false},{"featureName":"Command interpreter Execution","score":10.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Command interpreter Execution.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Command interpreter Execution.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Command interpreter Execution.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Command interpreter Execution                          %.1f / 10.0","output":"*****************************(Command interpreter Execution)*****************************\ncalling constructor: public main.AScannerBean() \ncalled constructor: public main.AScannerBean() \ncalling constructor: public main.ABridgeScene() \ncalled constructor: public main.ABridgeScene() \ncalling constructor: public main.ACommandInterpreter(main.ScannerBean,main.BridgeScene) main.AScannerBean@59706528, main.ABridgeScene@3c6e8da6\ncalled constructor: public main.ACommandInterpreter(main.ScannerBean,main.BridgeScene) main.AScannerBean@59706528, main.ABridgeScene@3c6e8da6\ncalling method: public mp.shapes.Avatar main.ABridgeScene.getArthur() with args \ncalled method: public mp.shapes.Avatar main.ABridgeScene.getArthur() with args: result:mp.shapes.AnAvatar@44edc66e\ncalling method: public mp.shapes.Avatar main.ABridgeScene.getGuard() with args \ncalled method: public mp.shapes.Avatar main.ABridgeScene.getGuard() with args: result:mp.shapes.AnAvatar@7030491e\ncalling method: public abstract mp.shapes.StringShape mp.shapes.Avatar.getText() with args \ncalled method: public abstract mp.shapes.StringShape mp.shapes.Avatar.getText() with args: result:mp.shapes.AStringShape@2a332b15\ncalling method: public void main.ABridgeScene.approach(mp.shapes.Avatar) with args mp.shapes.AnAvatar@44edc66e\ncalled method: public void main.ABridgeScene.approach(mp.shapes.Avatar) with args:mp.shapes.AnAvatar@44edc66e result:null\ncalling method: public void main.ACommandInterpreter.setCommand(java.lang.String) with args say \"What is your name?\" \nTerminated execution after milliseconds:2000\ncalling method: public java.lang.String main.AScannerBean.getScannedString() with args \ncalled method: public java.lang.String main.AScannerBean.getScannedString() with args: result:say \"What is your name?\" \ncalling method: public abstract java.lang.String mp.shapes.StringShape.getText() with args \ncalled method: public abstract java.lang.String mp.shapes.StringShape.getText() with args: result:Guard\n[mp.shapes.AnAvatar@44edc66e, mp.shapes.AnAvatar@7030491e, mp.shapes.AStringShape@2a332b15, null, gradingTools.sharedTestCase.MethodExecutionTestCase$ExecutionFailureException: java.util.concurrent.ExecutionException: java.lang.reflect.InvocationTargetException, say \"What is your name?\" , Guard]\n[false, true, false]\n### Say command test case: 0.3333333333333333\n*****************************(Command interpreter Execution)*****************************\ncalling constructor: public main.AScannerBean() \ncalled constructor: public main.AScannerBean() \ncalling constructor: public main.ABridgeScene() \ncalled constructor: public main.ABridgeScene() \ncalling constructor: public main.ACommandInterpreter(main.ScannerBean,main.BridgeScene) main.AScannerBean@62788048, main.ABridgeScene@488cf4df\ncalled constructor: public main.ACommandInterpreter(main.ScannerBean,main.BridgeScene) main.AScannerBean@62788048, main.ABridgeScene@488cf4df\ncalling method: public mp.shapes.Avatar main.ABridgeScene.getArthur() with args \ncalled method: public mp.shapes.Avatar main.ABridgeScene.getArthur() with args: result:mp.shapes.AnAvatar@3a862c69\ncalling method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@9ded3af\ncalled method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args:mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@9ded3af result:0\ncalling method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@2f82781c\ncalled method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args:mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@2f82781c result:40\ncalling method: public void main.ACommandInterpreter.setCommand(java.lang.String) with args move Arthur 10 10 \ncalled method: public void main.ACommandInterpreter.setCommand(java.lang.String) with args:move Arthur 10 10  result:null\ncalling method: public java.lang.String main.AScannerBean.getScannedString() with args \ncalled method: public java.lang.String main.AScannerBean.getScannedString() with args: result:move Arthur 10 10 \ncalling method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@9ded3af\ncalled method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args:mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@9ded3af result:10\ncalling method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@2f82781c\ncalled method: public static java.lang.Object gradingTools.sharedTestCase.MethodExecutionTestCase.cyclicGetProperty(java.lang.Object,java.lang.reflect.Method[]) throws java.lang.Exception with args:mp.shapes.AnAvatar@3a862c69, [Ljava.lang.reflect.Method;@2f82781c result:50\n[mp.shapes.AnAvatar@3a862c69, 0, 40, null, move Arthur 10 10 , 10, 50]\n[true, true, true, true]\n### Move command test case: 1.0\n","feature":{"manual":false,"extraCredit":false,"name":"Command interpreter Execution","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command interpreter Execution                          %.1f / 10.0"},"validate":false,"manual":false,"max":10.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Command interpreter Execution.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Guard method exists","score":2.0,"graded":true,"autoGradable":true,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Guard method exists.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Guard method exists.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Guard method exists.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Guard method exists                                    %.1f /  2.0 (Extra credit)","output":"","feature":{"manual":false,"extraCredit":true,"name":"Guard method exists","points":2.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Guard method exists                                    %.1f /  2.0 (Extra credit)"},"validate":false,"manual":false,"max":2.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":false,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Guard method exists.txt","restriction":false,"autoNotGraded":false,"fullCredit":true,"manualOverride":false,"partialCredit":false},{"featureName":"Guard claps","score":0.0,"graded":false,"autoGradable":false,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Guard claps.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Guard claps.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Guard claps.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Guard claps                                            %.1f /  4.0 (Extra credit)","output":"","feature":{"manual":true,"extraCredit":true,"name":"Guard claps","points":4.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Guard claps                                            %.1f /  4.0 (Extra credit)"},"validate":false,"manual":true,"max":4.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":true,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Guard claps.txt","restriction":false,"autoNotGraded":false,"fullCredit":false,"manualOverride":false,"partialCredit":false},{"featureName":"Command Interpreter Buttons ","score":0.0,"graded":false,"autoGradable":false,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Command Interpreter Buttons .txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Command Interpreter Buttons .txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Command Interpreter Buttons .txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Command Interpreter Buttons                            %.1f /  5.0 (Extra credit)","output":"","feature":{"manual":true,"extraCredit":true,"name":"Command Interpreter Buttons ","points":5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Command Interpreter Buttons                            %.1f /  5.0 (Extra credit)"},"validate":false,"manual":true,"max":5.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":true,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Command Interpreter Buttons .txt","restriction":false,"autoNotGraded":false,"fullCredit":false,"manualOverride":false,"partialCredit":false},{"featureName":"Dynamically  Enabled Buttons","score":0.0,"graded":false,"autoGradable":false,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Dynamically  Enabled Buttons.txt","manualNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/ManualNotes-Dynamically  Enabled Buttons.txt","autoNotesFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/AutoNotes-Dynamically  Enabled Buttons.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Dynamically  Enabled Buttons                           %.1f /  5.0 (Extra credit)","output":"","feature":{"manual":true,"extraCredit":true,"name":"Dynamically  Enabled Buttons","points":5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Dynamically  Enabled Buttons                           %.1f /  5.0 (Extra credit)"},"validate":false,"manual":true,"max":5.0,"selected":false,"autoWithNotFullCredit":false,"manualWithNotFullCredit":true,"resultFileName":"D:/dewan_backup/Java/Grader/Test Data/Comp401F15/Assignment10/Mistakes, Many(mmany)/Feedback Attachment(s)/Results-Dynamically  Enabled Buttons.txt","restriction":false,"autoNotGraded":false,"fullCredit":false,"manualOverride":false,"partialCredit":false}],"sourceCodeTAComments":""}